version: 2.1

orbs:
  python: circleci/python@1.3.2
  coverage-reporter: codacy/coverage-reporter@11.8.1

jobs:
  test:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - python/install-packages:
          pip-dependency-file: requirements.txt
          pkg-manager: pip
      - python/install-packages:
          args: pytest pytest-cov
          pkg-manager: pip
          pypi-cache: false
      - run:
          command: pytest --verbose --cov=steppyngstounes --cov-report=html --cov-report=xml
          name: Test
      - store_artifacts:
          path: htmlcov
          destination: htmlcov
      - coverage-reporter/send_report:
          coverage-reports: 'coverage.xml'
          project-token: $CODACY_PROJECT_TOKEN
          pypi-cache: false

  sphinx:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - python/install-packages:
          pip-dependency-file: requirements.txt
          pkg-manager: pip
      - python/install-packages:
          args: Sphinx>=3.1 matplotlib
          pkg-manager: pip
          pypi-cache: false
      - run:
          command: python setup.py build_sphinx
          name: Docs
      - store_artifacts:
          path: build/sphinx/html
          destination: docs

  lint:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - python/install-packages:
          pip-dependency-file: requirements.txt
          pkg-manager: pip
      - python/install-packages:
          args: flake8
          pkg-manager: pip
          pypi-cache: false
      - run:
          command: flake8 --statistics
          name: Lint

  spell:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - python/install-packages:
          pip-dependency-file: requirements.txt
          pkg-manager: pip
      - run:
          name: Install hunspell
          command: |
            sudo apt-get --yes update
            sudo apt-get --yes install hunspell hunspell-en-us libhunspell-dev
      - python/install-packages:
          args: pyspelling hunspell
          pkg-manager: pip
          pypi-cache: false
      - run:
          name: Fetch Dictionaries
          command: |
            wget -O en_US.aff  https://cgit.freedesktop.org/libreoffice/dictionaries/plain/en/en_US.aff?id=a4473e06b56bfe35187e302754f6baaa8d75e54f
            wget -O en_US.dic https://cgit.freedesktop.org/libreoffice/dictionaries/plain/en/en_US.dic?id=a4473e06b56bfe35187e302754f6baaa8d75e54f
      - run:
          command: pyspelling
          name: Spelling

workflows:
  main:
    jobs:
      - test
      - sphinx
      - lint
      - spell
